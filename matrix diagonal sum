Approach one: brute force O(n^2)
class Solution {
    public int diagonalSum(int[][] mat) {
        int sum=0;
        for(int i=0; i<mat.length;i++){
            for(int j=0; j<mat[0].length;j++){
                if(i==j) sum+=mat[i][j];
                else if(i+j==mat.length-1) sum+=mat[i][j];
            }
        }
        return sum;
    }
}


Approach 2nd: optimized time complexity: o(n)
class Solution {
    public int diagonalSum(int[][] mat) {
        int sum=0;
        for(int i=0; i<mat.length;i++){
            int n=mat.length;
            //primary diagonal
            sum+=mat[i][i];
            
            //secondary diagonal
            if(i!=n-i-1) sum+=mat[i][n-1-i];
        }
        return sum;
    }
}
